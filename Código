# -*- coding: utf-8 -*-
"""
Created on Wed Oct 20 20:32:10 2021
@author: Diana Victoria Morales Tavera y Aranza Moreno Sarabia 
         
Linear Solve: Gradiente descendente
Dejar en una función el método del gradiente.
"""
import numpy as np

#Sistema de ecuaciones que resolverá:
A = np.array([[4.0, -1.0, 1.0], [-1.0, 4.0, -2.0], [1.0, -2.0, 4.0]])
b = np.array([12.0, -1.0, 5.0])

x_sol = np.array([1.0, 1.0, 1.0])

def gradient(x, A, b):
	element_1 = np.dot(np.transpose(A),np.dot(A, x))
	element_2 = np.dot(np.transpose(A), b)
	return element_1 - element_2

def linear_solve(M, v, x_start, umbral, max_iter):
    k = 0.002
    for i in range(max_iter):
        print(x_start)
        x_start = x_start - k * gradient(x_start, M, v)
        current_v = np.dot(M,x_start)
        error_np = np.sum(np.abs(current_v-v))
        if error_np < umbral:
            return x_start

print(linear_solve(A, b, x_sol, 0.001, 10000))
